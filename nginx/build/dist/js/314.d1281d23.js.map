{"version":3,"file":"js/314.d1281d23.js","mappings":"oNACSA,MAAM,Q,GACFA,MAAM,oB,GACFA,MAAM,Q,GAMNA,MAAM,c,GAEFA,MAAM,qBAAqBC,GAAG,a,GAKlCD,MAAM,c,GACFA,MAAM,e,GAIFA,MAAM,wB,GAiBdA,MAAM,c,GAMNA,MAAM,c,GAcNA,MAAM,c,0CAzDnBE,EAAAA,EAAAA,IAkEM,MAlENC,EAkEM,EAjEFC,EAAAA,EAAAA,IAgEM,MAhENC,EAgEM,EA/DFD,EAAAA,EAAAA,IAGM,MAHNE,EAGM,EAFFF,EAAAA,EAAAA,IAA0C,MAArCG,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,QAAQC,KAAK,OAAM,UAAM,eACrCR,EAAAA,EAAAA,IAAa,UAAT,QAAI,OAIZA,EAAAA,EAAAA,IAGM,MAHNS,EAGM,EAFFT,EAAAA,EAAAA,IAAqG,SAA9FU,KAAK,OAAOb,GAAG,OAAOc,KAAK,OAAOC,YAAY,KAAKC,IAAI,YAAaC,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAC,WAAAD,EAAAC,aAAAF,IAAWG,SAAA,I,WAC5FlB,EAAAA,EAAAA,IAAoE,MAApEmB,GAAoEC,EAAAA,EAAAA,IAAlBC,EAAAC,WAAS,MAK/DtB,EAAAA,EAAAA,IAmBM,MAnBNuB,EAmBM,EAlBFvB,EAAAA,EAAAA,IAgBM,MAhBNwB,EAgBM,EAfFxB,EAAAA,EAAAA,IACgC,SADzBU,KAAK,OAAOd,MAAM,WAAWC,GAAG,UAAUc,KAAK,UAAUC,YAAY,MAAMC,IAAI,aACjFC,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAS,YAAAT,EAAAS,cAAAV,IAAYG,SAAA,I,yBACvBlB,EAAAA,EAAAA,IAA+B,QAAzBJ,MAAM,YAAW,KAAC,KACxBI,EAAAA,EAAAA,IASM,MATN0B,EASM,WARF1B,EAAAA,EAAAA,IAOS,UAPDJ,MAAM,sBAAsBC,GAAG,oB,qCAA6BwB,EAAAM,YAAWtB,GAC1EuB,SAAMxB,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAa,mBAAAb,EAAAa,qBAAAd,K,2SADuDM,EAAAM,kBASxE3B,EAAAA,EAAAA,IACqD,SAD9CU,KAAK,OAAOd,MAAM,qBAAqBC,GAAG,mBAAmBgB,IAAI,cACpED,YAAY,SAAUE,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAS,YAAAT,EAAAS,cAAAV,IAAYe,SAAA,I,aAEhD9B,EAAAA,EAAAA,IAA0F,OAArFJ,MAAM,qBAAqBC,GAAG,aAAagB,IAAI,kB,QAAmBQ,EAAAU,YAAU,QAIrF/B,EAAAA,EAAAA,IAGM,MAHNgC,EAGM,EAFFhC,EAAAA,EAAAA,IACa,SADNU,KAAK,WAAWb,GAAG,WAAWc,KAAK,WAAWC,YAAY,OAAOC,IAAI,WAAYC,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAiB,WAAAjB,EAAAiB,aAAAlB,IAC1FG,SAAA,I,aAIRlB,EAAAA,EAAAA,IAWM,MAXNkC,EAWM,EAVFlC,EAAAA,EAAAA,IACqD,SAD9CU,KAAK,WAAWb,GAAG,kBAAkBc,KAAK,kBAAkBE,IAAI,kBAClEC,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAiB,WAAAjB,EAAAiB,aAAAlB,IAAWH,YAAY,UAAUM,SAAA,I,WAC5ClB,EAAAA,EAAAA,IAC6B,OADxBJ,MAAM,qBAAqBC,GAAG,uBAAuBgB,IAAI,4B,QACvDQ,EAAAc,eAAa,oBAGpBnC,EAAAA,EAAAA,IAGM,OAHDJ,MAAM,mBAAiB,EACxBI,EAAAA,EAAAA,IAA4B,SAAzB,0BACHA,EAAAA,EAAAA,IAAwC,SAArC,uCAAiC,OAK5CA,EAAAA,EAAAA,IAIM,MAJNoC,EAIM,WAHFpC,EAAAA,EAAAA,IACgC,SADzBU,KAAK,OAAOb,GAAG,WAAWc,KAAK,WAAWC,YAAY,MAAMC,IAAI,WAAYC,OAAIV,EAAA,KAAAA,EAAA,OAAAW,IAAEC,EAAAqB,eAAArB,EAAAqB,iBAAAtB,I,qCAC5EM,EAAAiB,SAAQjC,GAAEa,SAAA,I,iBAAVG,EAAAiB,aACbtC,EAAAA,EAAAA,IAAmG,OAA9FJ,MAAM,qBAAqBC,GAAG,gBAAgBgB,IAAI,qB,QAAsBQ,EAAAkB,eAAa,QAI9FvC,EAAAA,EAAAA,IAAwE,UAAhEU,KAAK,SAASd,MAAM,aAAcO,QAAKC,EAAA,MAAAA,EAAA,IAAAC,GAAEW,EAAAwB,WAAU,W,eAOvE,GACI7B,KAAM,SACN8B,IAAAA,GACI,MAAO,CACHd,YAAa,GACbe,OAAQ,GACRpB,UAAW,GACXS,WAAY,GACZI,cAAe,GACfI,cAAe,GACfI,WAAY,GACZL,SAAU,GACVM,kBAAkB,EAClBC,iBAAiB,EACjBC,qBAAqB,EAE7B,EACAC,QAAS,CACLlB,iBAAAA,GAC6B,WAArBmB,KAAKrB,aACLqB,KAAKC,MAAMtB,YAAYuB,MAAQ,GAC/BF,KAAKC,MAAMtB,YAAYwB,gBAAgB,YACvCH,KAAKC,MAAMtB,YAAYyB,UAEvBJ,KAAKC,MAAMtB,YAAYuB,MAAQF,KAAKrB,YACpCqB,KAAKC,MAAMtB,YAAY0B,aAAa,WAAY,aAGpDL,KAAKvB,YACT,EACAR,SAAAA,GAGI,GAFA+B,KAAKC,MAAMK,UAAUJ,MAAQF,KAAKC,MAAMK,UAAUJ,MAAMK,OAEpDP,KAAKC,MAAMK,UAAUJ,MAAMM,OAAS,GAAKR,KAAKC,MAAMK,UAAUJ,MAAMM,OAAS,GAE7E,YADAR,KAAK1B,UAAY,6BAIrB,MAAMX,EAAOqC,KAAKC,MAAMK,UAAUJ,MAG5BO,EAAiB,WAElBA,EAAeC,KAAK/C,GAKzBqC,KAAK1B,UAAY,GAJb0B,KAAK1B,UAAY,kBAKzB,EACAG,UAAAA,GACIuB,KAAKC,MAAMU,WAAWT,MAAQF,KAAKC,MAAMU,WAAWT,MAAMK,OAC1DP,KAAKC,MAAMtB,YAAYuB,MAAQF,KAAKC,MAAMtB,YAAYuB,MAAMK,OAC5DP,KAAKL,WAAaK,KAAKC,MAAMU,WAAWT,MAAQ,IAAMF,KAAKC,MAAMtB,YAAYuB,MAC7E,MAAMU,EAAe,mDAEhBZ,KAAKC,MAAMU,WAAWT,MAGK,WAArBF,KAAKrB,aAA6BqB,KAAKC,MAAMtB,YAAYuB,MAGxDF,KAAKC,MAAMtB,YAAYuB,MAGvBU,EAAaF,KAAKV,KAAKL,YAI/BkB,EAAAA,EAAMC,IAAI,uBAAwB,CAC9BC,OAAQ,CACJC,MAAOhB,KAAKL,cAGfsB,MAAKC,IAC2B,SAAzBA,EAASzB,KAAK0B,QACdnB,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,UACvCtB,KAAKjB,WAAa,qBAElBiB,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,QACvCtB,KAAKjB,WAAa,gBAClBiB,KAAKJ,kBAAmB,OAfpCI,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,UACvCtB,KAAKjB,WAAa,uBAJlBiB,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,UACvCtB,KAAKjB,WAAa,qBAJlBiB,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,UACvCtB,KAAKjB,WAAa,qBAJlBiB,KAAKC,MAAMmB,cAAcC,MAAMC,MAAQ,UACvCtB,KAAKjB,WAAa,eA2B1B,EACAE,SAAAA,GACIe,KAAKC,MAAMsB,SAASrB,MAAQF,KAAKC,MAAMsB,SAASrB,MAAMK,OACtDP,KAAKC,MAAMuB,gBAAgBtB,MAAQF,KAAKC,MAAMuB,gBAAgBtB,MAAMK,OAEpE,MAAMkB,EAAkB,mEAEnBzB,KAAKC,MAAMsB,SAASrB,MAEbF,KAAKC,MAAMuB,gBAAgBtB,MAE3BuB,EAAgBf,KAAKV,KAAKC,MAAMsB,SAASrB,OAE1CF,KAAKC,MAAMsB,SAASrB,QAAUF,KAAKC,MAAMuB,gBAAgBtB,MAChEF,KAAKb,cAAgB,oBAErBa,KAAKC,MAAMyB,wBAAwBL,MAAMC,MAAQ,QACjDtB,KAAKb,cAAgB,iBACrBa,KAAKH,iBAAkB,GANvBG,KAAKb,cAAgB,wCAFrBa,KAAKb,cAAgB,mBAFrBa,KAAKb,cAAgB,eAY7B,EACAE,aAAAA,GACIW,KAAKC,MAAM0B,SAASzB,MAAQF,KAAKC,MAAM0B,SAASzB,MAAMK,OAElDP,KAAKC,MAAM0B,SAASzB,MAAMM,OAAS,GAAKR,KAAKC,MAAM0B,SAASzB,MAAMM,OAAS,GAC3ER,KAAKC,MAAM2B,iBAAiBP,MAAMC,MAAQ,UAC1CtB,KAAKT,cAAgB,6BAErBsB,EAAAA,EAAMC,IAAI,0BAA2B,CACjCC,OAAQ,CACJzB,SAAUU,KAAKV,YAGlB2B,MAAKC,IAC2B,SAAzBA,EAASzB,KAAK0B,QACdnB,KAAKC,MAAM2B,iBAAiBP,MAAMC,MAAQ,UAC1CtB,KAAKT,cAAgB,qBAErBS,KAAKC,MAAM2B,iBAAiBP,MAAMC,MAAQ,QAC1CtB,KAAKT,cAAgB,gBACrBS,KAAKF,qBAAsB,KAI/C,EACAN,MAAAA,GACI,IAAIqC,GAAW,IAGV7B,KAAKC,MAAMK,UAAUJ,OAASF,KAAKC,MAAMK,UAAUJ,MAAMK,OAAOC,OAAS,KAC1ER,KAAK8B,kBAAkB9B,KAAKC,MAAMK,WAClCuB,GAAW,GAKV7B,KAAKC,MAAMU,WAAWT,QACvBF,KAAK8B,kBAAkB9B,KAAKC,MAAMU,YAClCkB,GAAW,GAEV7B,KAAKC,MAAMtB,YAAYuB,QACxBF,KAAK8B,kBAAkB9B,KAAKC,MAAMtB,aAClCkD,GAAW,GAGV7B,KAAKJ,mBACNI,KAAK8B,kBAAkB9B,KAAKC,MAAMtB,aAClCqB,KAAK8B,kBAAkB9B,KAAKC,MAAMU,YAClCkB,GAAW,GAIV7B,KAAKH,kBACNG,KAAK8B,kBAAkB9B,KAAKC,MAAMsB,UAClCvB,KAAK8B,kBAAkB9B,KAAKC,MAAMuB,iBAClCK,GAAW,GAIV7B,KAAKF,sBACNE,KAAK8B,kBAAkB9B,KAAKC,MAAM0B,UAClCE,GAAW,GAIXA,GAKJhB,EAAAA,EAAMkB,KAAK,mBAAoB,CAC3BC,UAAWhC,KAAKL,WAChBsC,SAAUjC,KAAKC,MAAMK,UAAUJ,MAAMK,OACrC2B,aAAclC,KAAKC,MAAMsB,SAASrB,MAAMK,OACxC4B,aAAcnC,KAAKV,WAEtB2B,MAAKC,IACFkB,MAAMlB,EAASzB,KAAK4C,SACpBrC,KAAKzC,QAAQC,KAAK,QAErB8E,OAAMC,IACHC,QAAQD,MAAM,WAAYA,GAC1BH,MAAM,8BAEd,EACAN,iBAAAA,CAAkBW,EAASC,EAAgB,mBAClCD,IAGLA,EAAQE,UAAUC,OAAO,kBAAmB,kBAAmB,yBAA0B,mBAGzFH,EAAQE,UAAUE,IAAIH,GAGtBI,YAAW,KACPL,EAAQE,UAAUC,OAAOF,KAC1B,KACP,EAEAK,kBAAAA,CAAmBN,GACVA,IAELzC,KAAK8B,kBAAkBW,GACvBK,YAAW,KACPL,EAAQrC,UACT,KACP,I,UCrRR,MAAM4C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://pikolo-vuejs/./src/pages/Signup.vue","webpack://pikolo-vuejs/./src/pages/Signup.vue?01f2"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <div class=\"signup-container\">\r\n            <div class=\"logo\">\r\n                <h1 @click=\"$router.push('/')\">PIKOLO</h1>\r\n                <h2>회원가입</h2>\r\n            </div>\r\n\r\n            <!-- 이름 -->\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"이름\" ref=\"nameInput\" @blur=\"nameCheck\" required>\r\n                <div class=\"validation-message\" id=\"nameError\">{{ nameError }}</div>\r\n            </div>\r\n\r\n\r\n            <!-- 이메일 -->\r\n            <div class=\"form-group\">\r\n                <div class=\"email-group\">\r\n                    <input type=\"text\" class=\"email-id\" id=\"emailId\" name=\"emailId\" placeholder=\"이메일\" ref=\"emailInput\"\r\n                        @blur=\"emailCheck\" required>\r\n                    <span class=\"email-at\">@</span>\r\n                    <div class=\"email-domain-wrapper\">\r\n                        <select class=\"email-domain-select\" id=\"emailDomainSelect\" v-model=\"emailDomain\"\r\n                            @change=\"emailDomainChange\">\r\n                            <option value=\"\">선택</option>\r\n                            <option value=\"naver.com\">네이버</option>\r\n                            <option value=\"gmail.com\">구글</option>\r\n                            <option value=\"daum.net\">다음</option>\r\n                            <option value=\"direct\">직접입력</option>\r\n                        </select>\r\n                    </div>\r\n                    <input type=\"text\" class=\"email-domain-input\" id=\"emailDomainInput\" ref=\"emailDomain\"\r\n                        placeholder=\"도메인 입력\" @blur=\"emailCheck\" readonly>\r\n                </div>\r\n                <div class=\"validation-message\" id=\"emailError\" ref=\"emailErrorDiv\">{{ emailError }}</div>\r\n            </div>\r\n\r\n            <!-- 비밀번호 -->\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"비밀번호\" ref=\"password\" @blur=\"passCheck\"\r\n                    required>\r\n            </div>\r\n\r\n            <!-- 비밀번호 확인 -->\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" id=\"passwordConfirm\" name=\"passwordConfirm\" ref=\"passwordConfirm\"\r\n                    @blur=\"passCheck\" placeholder=\"비밀번호 확인\" required>\r\n                <div class=\"validation-message\" id=\"passwordConfirmError\" ref=\"passwordConfirmErrorDiv\">\r\n                    {{ passwordError }}</div>\r\n\r\n                <!-- 비밀번호 주의사항 -->\r\n                <div class=\"password-notice\">\r\n                    <p>비밀번호는 8~16자가 되어야 합니다.</p>\r\n                    <p>비밀번호는 영문자, 숫자, 특수문자를 모두 포함해야 합니다.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- 닉네임 -->\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" id=\"nickname\" name=\"nickname\" placeholder=\"닉네임\" ref=\"nicnname\" @blur=\"nicknameCheck\"\r\n                    v-model=\"nickname\" required>\r\n                <div class=\"validation-message\" id=\"nicknameError\" ref=\"nicknameErrorDiv\">{{ nicknameError }}</div>\r\n            </div>\r\n\r\n            <!-- 회원가입 버튼 -->\r\n            <button type=\"button\" class=\"submit-btn\" @click=\"signUp()\">회원가입</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'Signup',\r\n    data() {\r\n        return {\r\n            emailDomain: '',\r\n            domain: '',\r\n            nameError: '',\r\n            emailError: '',\r\n            passwordError: '',\r\n            nicknameError: '',\r\n            totalEmail: '',\r\n            nickname: '',\r\n            emailCheckResult: false,\r\n            passCheckResult: false,\r\n            nicknameCheckResult: false,\r\n        }\r\n    },\r\n    methods: {\r\n        emailDomainChange() {\r\n            if (this.emailDomain === 'direct') {\r\n                this.$refs.emailDomain.value = '';\r\n                this.$refs.emailDomain.removeAttribute('readonly');\r\n                this.$refs.emailDomain.focus();\r\n            } else {\r\n                this.$refs.emailDomain.value = this.emailDomain;\r\n                this.$refs.emailDomain.setAttribute('readonly', 'readonly');\r\n            }\r\n\r\n            this.emailCheck();\r\n        },\r\n        nameCheck() {\r\n            this.$refs.nameInput.value = this.$refs.nameInput.value.trim();\r\n\r\n            if (this.$refs.nameInput.value.length < 2 || this.$refs.nameInput.value.length > 10) {\r\n                this.nameError = '이름은 2자 이상 10자 이하로 입력해주세요.';\r\n                return;\r\n            }\r\n\r\n            const name = this.$refs.nameInput.value;\r\n\r\n            // 완성된 한글만 허용 (가-힣)\r\n            const koreanComplete = /^[가-힣]+$/;\r\n\r\n            if (!koreanComplete.test(name)) {\r\n                this.nameError = '이름을 올바르게 입력해주세요.';\r\n                return;\r\n            }\r\n\r\n            this.nameError = '';\r\n        },\r\n        emailCheck() {\r\n            this.$refs.emailInput.value = this.$refs.emailInput.value.trim();\r\n            this.$refs.emailDomain.value = this.$refs.emailDomain.value.trim();\r\n            this.totalEmail = this.$refs.emailInput.value + '@' + this.$refs.emailDomain.value;\r\n            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n            if (!this.$refs.emailInput.value) {\r\n                this.$refs.emailErrorDiv.style.color = '#e74c3c';\r\n                this.emailError = '이메일을 입력해주세요.';\r\n            } else if (this.emailDomain === 'direct' && !this.$refs.emailDomain.value) {\r\n                this.$refs.emailErrorDiv.style.color = '#e74c3c';\r\n                this.emailError = '이메일 도메인을 입력해주세요.';\r\n            } else if (!this.$refs.emailDomain.value) {\r\n                this.$refs.emailErrorDiv.style.color = '#e74c3c';\r\n                this.emailError = '이메일 도메인을 선택해주세요.';\r\n            } else if (!emailPattern.test(this.totalEmail)) {\r\n                this.$refs.emailErrorDiv.style.color = '#e74c3c';\r\n                this.emailError = '유효하지 않은 이메일 형식입니다.';\r\n            } else {\r\n                axios.get('/api/user/emailCheck', {\r\n                    params: {\r\n                        email: this.totalEmail\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        if (response.data.result === 'fail') {\r\n                            this.$refs.emailErrorDiv.style.color = '#e74c3c';\r\n                            this.emailError = '이미 사용 중인 이메일입니다.';\r\n                        } else {\r\n                            this.$refs.emailErrorDiv.style.color = 'green';\r\n                            this.emailError = '사용가능한 이메일입니다.';\r\n                            this.emailCheckResult = true;\r\n                        }\r\n                    })\r\n            }\r\n        },\r\n        passCheck() {\r\n            this.$refs.password.value = this.$refs.password.value.trim();\r\n            this.$refs.passwordConfirm.value = this.$refs.passwordConfirm.value.trim();\r\n\r\n            const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,16}$/;\r\n\r\n            if (!this.$refs.password.value) {\r\n                this.passwordError = '비밀번호를 입력해주세요.';\r\n            } else if (!this.$refs.passwordConfirm.value) {\r\n                this.passwordError = '비밀번호 확인을 입력해주세요.';\r\n            } else if (!passwordPattern.test(this.$refs.password.value)) {\r\n                this.passwordError = '비밀번호는 8~16자, 영문자, 숫자, 특수문자를 포함해야 합니다.';\r\n            } else if (this.$refs.password.value !== this.$refs.passwordConfirm.value) {\r\n                this.passwordError = '비밀번호가 일치하지 않습니다.';\r\n            } else {\r\n                this.$refs.passwordConfirmErrorDiv.style.color = 'green';\r\n                this.passwordError = '사용가능한 비밀번호입니다.';\r\n                this.passCheckResult = true;\r\n            }\r\n        },\r\n        nicknameCheck() {\r\n            this.$refs.nicnname.value = this.$refs.nicnname.value.trim();\r\n\r\n            if (this.$refs.nicnname.value.length < 2 || this.$refs.nicnname.value.length > 8) {\r\n                this.$refs.nicknameErrorDiv.style.color = '#e74c3c';\r\n                this.nicknameError = '닉네임은 2자 이상 8자 이하로 입력해주세요.';\r\n            } else {\r\n                axios.get('/api/user/nicknameCheck', {\r\n                    params: {\r\n                        nickname: this.nickname\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        if (response.data.result === 'fail') {\r\n                            this.$refs.nicknameErrorDiv.style.color = '#e74c3c';\r\n                            this.nicknameError = '이미 사용 중인 닉네임입니다.';\r\n                        } else {\r\n                            this.$refs.nicknameErrorDiv.style.color = 'green';\r\n                            this.nicknameError = '사용가능한 닉네임입니다.';\r\n                            this.nicknameCheckResult = true;\r\n                        }\r\n                    })\r\n            }\r\n        },\r\n        signUp() {\r\n            let hasError = false;\r\n\r\n            // 이름 유효성 검사\r\n            if (!this.$refs.nameInput.value || this.$refs.nameInput.value.trim().length < 2) {\r\n                this.addErrorAnimation(this.$refs.nameInput);\r\n                hasError = true;\r\n            }\r\n\r\n            // 이메일 유효성 검사\r\n\r\n            if (!this.$refs.emailInput.value) {\r\n                this.addErrorAnimation(this.$refs.emailInput);\r\n                hasError = true;\r\n            }\r\n            if (!this.$refs.emailDomain.value) {\r\n                this.addErrorAnimation(this.$refs.emailDomain);\r\n                hasError = true;\r\n            }\r\n\r\n            if (!this.emailCheckResult) {\r\n                this.addErrorAnimation(this.$refs.emailDomain);\r\n                this.addErrorAnimation(this.$refs.emailInput);\r\n                hasError = true;\r\n            }\r\n\r\n            // 비밀번호 유효성 검사\r\n            if (!this.passCheckResult) {\r\n                this.addErrorAnimation(this.$refs.password);\r\n                this.addErrorAnimation(this.$refs.passwordConfirm);\r\n                hasError = true;\r\n            }\r\n\r\n            // 닉네임 유효성 검사\r\n            if (!this.nicknameCheckResult) {\r\n                this.addErrorAnimation(this.$refs.nicnname);\r\n                hasError = true;\r\n            }\r\n\r\n            // 오류가 있으면 회원가입 중단\r\n            if (hasError) {\r\n                return;\r\n            }\r\n\r\n            // 모든 유효성 검사 통과 후 회원가입 요청\r\n            axios.post('/api/user/signup', {\r\n                userEmail: this.totalEmail,\r\n                userName: this.$refs.nameInput.value.trim(),\r\n                userPassword: this.$refs.password.value.trim(),\r\n                userNickname: this.nickname,\r\n            })\r\n            .then(response => {\r\n                alert(response.data.message);\r\n                this.$router.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.error('회원가입 실패:', error);\r\n                alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n            })\r\n        },\r\n        addErrorAnimation(element, animationType = 'error-highlight') {\r\n            if (!element) return;\r\n\r\n            // 기존 애니메이션 클래스 제거\r\n            element.classList.remove('shake-animation', 'flash-animation', 'border-flash-animation', 'error-highlight');\r\n\r\n            // 새 애니메이션 클래스 추가\r\n            element.classList.add(animationType);\r\n\r\n            // 애니메이션 완료 후 클래스 제거\r\n            setTimeout(() => {\r\n                element.classList.remove(animationType);\r\n            }, 500);\r\n        },\r\n        // 포커스와 함께 애니메이션 적용\r\n        focusWithAnimation(element) {\r\n            if (!element) return;\r\n\r\n            this.addErrorAnimation(element);\r\n            setTimeout(() => {\r\n                element.focus();\r\n            }, 200);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\r\n    background-color: #f8f8f8;\r\n    color: #333;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 20px;\r\n}\r\n\r\n.signup-container {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 480px;\r\n    padding: 40px 30px;\r\n}\r\n\r\n.logo {\r\n    text-align: center;\r\n    margin-bottom: 40px;\r\n}\r\n\r\n.logo h1 {\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n    color: #333;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.logo h2 {\r\n    font-size: 18px;\r\n    color: #666;\r\n    font-weight: 400;\r\n    margin-bottom: 30px;\r\n}\r\n\r\n/* 구분선 */\r\n.logo::after {\r\n    content: '';\r\n    display: block;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #333;\r\n    margin: 20px 0;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 20px;\r\n}\r\n\r\ninput,\r\nselect {\r\n    width: 100%;\r\n    padding: 15px 18px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    font-size: 16px;\r\n    background-color: #fff;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\ninput:focus,\r\nselect:focus {\r\n    outline: none;\r\n    border-color: #333;\r\n    box-shadow: 0 0 0 3px rgba(51, 51, 51, 0.1);\r\n}\r\n\r\ninput::placeholder {\r\n    color: #999;\r\n}\r\n\r\n/* 이메일 입력 필드 스타일 수정 */\r\n.email-group {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n\r\n.email-id {\r\n    flex: 1;\r\n    /* 기존 0.8에서 1로 변경 */\r\n    min-width: 120px;\r\n    font-size: 12px;\r\n}\r\n\r\n\r\n\r\n.email-at {\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #333;\r\n    flex-shrink: 0;\r\n    /* @ 기호가 줄어들지 않도록 */\r\n}\r\n\r\n.email-domain-wrapper {\r\n    flex: 1;\r\n    /* 기존 0.8에서 1로 변경 */\r\n    position: relative;\r\n    min-width: 120px;\r\n}\r\n\r\n.email-domain-select {\r\n    font-size: 12px;\r\n    width: 100%;\r\n}\r\n\r\n.email-domain-input {\r\n    font-size: 12px;\r\n    width: 100%;\r\n}\r\n\r\n.email-domain-input.active {\r\n    display: block;\r\n}\r\n\r\n.email-domain-select.hidden {\r\n    display: none;\r\n}\r\n\r\n/* 비밀번호 주의사항 스타일 */\r\n.password-notice {\r\n    margin-top: 8px;\r\n    padding: 12px 15px;\r\n    background-color: #f8f9fa;\r\n    border-radius: 6px;\r\n    border-left: 3px solid #333;\r\n}\r\n\r\n.password-notice p {\r\n    font-size: 13px;\r\n    color: #666;\r\n    margin-bottom: 4px;\r\n    line-height: 1.4;\r\n}\r\n\r\n.password-notice p:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n/* 체크박스 스타일 */\r\n.checkbox-group {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin: 25px 0;\r\n}\r\n\r\n.checkbox-group input[type=\"checkbox\"] {\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 0;\r\n}\r\n\r\n.checkbox-group label {\r\n    font-size: 14px;\r\n    color: #666;\r\n    cursor: pointer;\r\n}\r\n\r\n/* 버튼 스타일 */\r\n.submit-btn {\r\n    width: 100%;\r\n    padding: 15px;\r\n    background-color: #333;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.submit-btn:hover {\r\n    background-color: #555;\r\n}\r\n\r\n/* 유효성 검사 메시지 공간 */\r\n.validation-message {\r\n    height: 20px;\r\n    margin-top: 5px;\r\n    font-size: 13px;\r\n    color: #e74c3c;\r\n}\r\n\r\n/* 반응형 - 600px 이하 */\r\n@media (max-width: 600px) {\r\n    .signup-container {\r\n        padding: 30px 20px;\r\n    }\r\n\r\n    .email-group {\r\n        gap: 4px;\r\n        align-items: center;\r\n    }\r\n\r\n    .email-id {\r\n        flex: 1;\r\n        /* 기존 1.2에서 1로 변경 */\r\n        min-width: 80px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .email-domain-wrapper {\r\n        flex: 1;\r\n        /* 기존 0.8에서 1로 변경 */\r\n        min-width: 80px;\r\n        /* 70px에서 80px로 동일하게 */\r\n    }\r\n\r\n    .email-domain-select {\r\n        font-size: 12px;\r\n        padding: 12px 8px;\r\n    }\r\n\r\n    .email-domain-input {\r\n        font-size: 12px;\r\n        padding: 12px 8px;\r\n    }\r\n\r\n    .email-at {\r\n        align-self: center;\r\n        margin: 0 2px;\r\n        font-size: 14px;\r\n        flex-shrink: 0;\r\n    }\r\n}\r\n\r\n/* 480px 이하 */\r\n@media (max-width: 480px) {\r\n    .signup-container {\r\n        padding: 20px 15px;\r\n    }\r\n\r\n    .email-group {\r\n        gap: 3px;\r\n        align-items: center;\r\n    }\r\n\r\n    .email-id {\r\n        flex: 1;\r\n        /* 기존 1.3에서 1로 변경 */\r\n        min-width: 100px;\r\n        font-size: 13px;\r\n        padding: 12px 10px;\r\n    }\r\n\r\n    .email-domain-wrapper {\r\n        flex: 1;\r\n        /* 기존 0.7에서 1로 변경 */\r\n        min-width: 70px;\r\n        /* 60px에서 70px로 동일하게 */\r\n    }\r\n\r\n    .email-domain-select {\r\n        font-size: 10px;\r\n        padding: 12px 6px;\r\n    }\r\n\r\n    .email-domain-input {\r\n        font-size: 11px;\r\n        padding: 12px 6px;\r\n    }\r\n\r\n    .email-at {\r\n        margin: 0 1px;\r\n        font-size: 13px;\r\n    }\r\n}\r\n\r\n/* 360px 이하 */\r\n@media (max-width: 360px) {\r\n    .email-group {\r\n        flex-direction: column;\r\n        gap: 8px;\r\n    }\r\n\r\n    .email-at {\r\n        align-self: flex-start;\r\n        margin-left: 5px;\r\n    }\r\n\r\n    .email-id,\r\n    .email-domain-wrapper {\r\n        flex: 1;\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n/* 흔들림 애니메이션 */\r\n@keyframes shake {\r\n\r\n    0%,\r\n    100% {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    10%,\r\n    30%,\r\n    50%,\r\n    70%,\r\n    90% {\r\n        transform: translateX(-1px);\r\n    }\r\n\r\n    20%,\r\n    40%,\r\n    60%,\r\n    80% {\r\n        transform: translateX(1px);\r\n    }\r\n}\r\n\r\n/* 반짝임 애니메이션 */\r\n@keyframes flash {\r\n\r\n    0%,\r\n    100% {\r\n        background-color: transparent;\r\n    }\r\n\r\n    50% {\r\n        background-color: rgba(255, 211, 207, 0.2);\r\n    }\r\n}\r\n\r\n/* 테두리 강조 애니메이션 */\r\n@keyframes borderFlash {\r\n\r\n    0%,\r\n    100% {\r\n        border-color: #ddd;\r\n    }\r\n\r\n    50% {\r\n        border-color: #ffc4be;\r\n    }\r\n}\r\n\r\n/* 애니메이션 클래스 */\r\n.shake-animation {\r\n    animation: shake 0.3s ease-in-out;\r\n}\r\n\r\n.flash-animation {\r\n    animation: flash 0.5s ease-in-out;\r\n}\r\n\r\n.border-flash-animation {\r\n    animation: borderFlash 0.5s ease-in-out;\r\n}\r\n\r\n/* 복합 애니메이션 */\r\n.error-highlight {\r\n    animation: shake 0.5s ease-in-out, flash 0.5s ease-in-out;\r\n}\r\n</style>","import { render } from \"./Signup.vue?vue&type=template&id=51279536&scoped=true\"\nimport script from \"./Signup.vue?vue&type=script&lang=js\"\nexport * from \"./Signup.vue?vue&type=script&lang=js\"\n\nimport \"./Signup.vue?vue&type=style&index=0&id=51279536&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-51279536\"]])\n\nexport default __exports__"],"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","$event","_ctx","$router","push","_hoisted_4","type","name","placeholder","ref","onBlur","args","$options","nameCheck","required","_hoisted_5","_toDisplayString","$data","nameError","_hoisted_6","_hoisted_7","emailCheck","_hoisted_8","emailDomain","onChange","emailDomainChange","readonly","emailError","_hoisted_9","passCheck","_hoisted_10","passwordError","_hoisted_11","nicknameCheck","nickname","nicknameError","signUp","data","domain","totalEmail","emailCheckResult","passCheckResult","nicknameCheckResult","methods","this","$refs","value","removeAttribute","focus","setAttribute","nameInput","trim","length","koreanComplete","test","emailInput","emailPattern","axios","get","params","email","then","response","result","emailErrorDiv","style","color","password","passwordConfirm","passwordPattern","passwordConfirmErrorDiv","nicnname","nicknameErrorDiv","hasError","addErrorAnimation","post","userEmail","userName","userPassword","userNickname","alert","message","catch","error","console","element","animationType","classList","remove","add","setTimeout","focusWithAnimation","__exports__","render"],"sourceRoot":""}